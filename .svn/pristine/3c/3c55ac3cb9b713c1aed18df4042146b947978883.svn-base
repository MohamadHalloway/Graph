package de.jpp.io;

import de.jpp.factory.GraphFactory;
import de.jpp.io.interfaces.GraphReader;
import de.jpp.io.interfaces.ParseException;
import de.jpp.model.GraphImpl;
import de.jpp.model.TwoDimGraph;
import de.jpp.model.XYNode;
import de.jpp.model.interfaces.Graph;
import org.jdom2.*;

import java.lang.annotation.Annotation;
import java.util.Map;
import java.util.Optional;


public abstract class GxlReaderTemplate<N, A, G extends Graph<N, A>, String> implements GraphReader<N, A, G, String> {


    public GxlReaderTemplate() {
    }

    @Override
    public G read(String input) throws ParseException {
        return null;
    }

    private void addEdge(G graph, Element element, Map<String, N> map) {
        if (element.getName() != "edge"){
            throw new IllegalArgumentException("element is not an edge");
        }
    }

    public abstract G createGraph();

    public abstract String readNodeId(N node, Element element);

    public abstract N readNode(Element element);

    public abstract Optional<A> readAnnotation(Element element);

}
